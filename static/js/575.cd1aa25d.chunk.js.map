{"version":3,"file":"static/js/575.cd1aa25d.chunk.js","mappings":"+SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAIlB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAA,qCAAwCD,IADhC,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAOjBC,EAAiB,mCAAG,WAAOC,EAAOC,GAAd,uFACRN,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBM,EADpB,kBACmCC,EADnC,yBADQ,cACzBJ,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,wDAQjBI,EAAe,mCAAG,WAAMC,GAAN,uFACNR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACET,EADF,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAQfM,EAAY,mCAAG,WAAMD,GAAN,uFACHR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACUT,EADV,oBADG,cACpBG,EADoB,yBAInBA,EAASC,KAAKO,MAJK,2CAAH,sDASZC,EAAU,mCAAG,WAAMH,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACUT,EADV,oBADC,cAClBG,EADkB,yBAIjBA,EAASC,KAAKS,SAJG,2CAAH,qD,+JCrCVC,EAAeC,EAAAA,GAAAA,IAAH,8HAOZC,EAAYD,EAAAA,GAAAA,GAAH,kJAQTE,EAAOF,EAAAA,GAAAA,GAAH,wTAeJG,EAAWH,EAAAA,GAAAA,GAAH,oL,SC3BRI,EAAoB,SAAC,GAAuB,IACjDC,EADgD,EAApBC,cACAR,QAElC,OACE,UAACC,EAAD,YACE,SAACE,EAAD,8BACC,SAACC,EAAD,iBACAG,QADA,IACAA,OADA,EACAA,EAAaE,KAAI,SAAAC,GAAI,OACpB,SAACL,EAAD,WACE,SAAC,KAAD,CAAMM,GAAE,kBAAaD,EAAKd,IAA1B,UACG,6BAAKc,EAAKE,YAFAF,EAAKd,GADA,QAa3B,ECWD,EAhCa,WACX,OAA4CiB,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBJ,GAAW,GADK,mBAGS5B,EAAAA,EAAAA,MAHT,OAGRC,EAHQ,OAIdyB,EAAkBzB,GAJJ,gDAMd6B,EAASD,GANK,yBAQdD,GAAW,GARG,4EAAH,qDAWfI,GACD,GAAE,CAACH,KAGF,2BACE,+BACGF,IAAW,yCACZ,0BACE,SAACV,EAAD,CAAmBE,cAAeM,UAK3C,C","sources":["fetch-services/Fetch-servises.jsx","components/TrendingMovieList/TrendingMovieList.styled.jsx","components/TrendingMovieList/TrendingMovieList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'eb6a45a4ae6328e079a1ce9a0d7e00e8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\n\nexport const getTrendingMovies = async () => {\n  const responce = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return responce.data;\n};\n\n\n\nexport const getMoviesBySearch = async (query, page) => {\n  const responce = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}'&page=${page}&include_adult=false`\n  );\n  return responce.data;\n};\n\n\nexport const getMovieDetails = async id => {\n  const responce = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\n\nexport const getMovieCast = async id => {\n  const responce = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data.cast;\n};\n\n\n\nexport const getReviews = async id => {\n  const responce = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data.results;\n};\n","import styled from 'styled-components';\n\nexport const TrendingList = styled.div`\n    padding-right: 50px;\n    padding-left: 50px;\n    padding-top: 30px;\n    padding-bottom: 30px;\n`\n\nexport const ListTitle = styled.h1`\n   color: white;\n   text-shadow: 3px 4px 7px rgba(7, 34, 38, 0.8);\n   font-weight: 700;\n   font-size: 40px;\n   \n   \n`\nexport const List = styled.ul`\n    \n    display: grid;\n   max-width: calc(100vw - 20px); \n   grid-template-columns: repeat(auto-fill, minmax(350px, 1fr)); \n  grid-gap: 5px;\n  column-gap: 40px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nexport const ListItem = styled.li`\ncolor: white;\n    font-size: 20px;\n\n  :focus,\n  &:hover {  \n    text-decoration: underline;\n     text-shadow: 3px 4px 7px rgba(7, 34, 38, 0.8);\n  }\n`","import { Link } from \"react-router-dom\";\nimport { TrendingList, ListTitle, List, ListItem } from \"./TrendingMovieList.styled\";\nimport PropTypes from 'prop-types';\n\n\nexport const TrendingMovieList = ({ moviesInTrend }) => {\n  const trendMovies = moviesInTrend.results;\n\n  return (\n    <TrendingList >\n      <ListTitle>Tranding today</ListTitle>\n       <List>\n      {trendMovies?.map(item => (\n        <ListItem key={item.id}>\n          <Link to={`/movies/${item.id}`}>\n             <p> {item.title}</p>\n          </Link>\n         \n        </ListItem>\n      ))}\n    </List>\n  \n    </TrendingList >\n    );\n   \n};\n\n\nTrendingMovieList.propTypes = {\n  searchMovies: PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n  }).isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'fetch-services/Fetch-servises';\nimport { TrendingMovieList } from 'components/TrendingMovieList/TrendingMovieList';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const responce = await getTrendingMovies();\n        setTrendingMovies(responce);\n      } catch {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [error]);\n\n  return (\n    <main>\n      <section>\n        {loading && <div>Loading...</div>}\n        <div>\n          <TrendingMovieList moviesInTrend={trendingMovies} />\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["API_KEY","axios","getTrendingMovies","responce","data","getMoviesBySearch","query","page","getMovieDetails","id","getMovieCast","cast","getReviews","results","TrendingList","styled","ListTitle","List","ListItem","TrendingMovieList","trendMovies","moviesInTrend","map","item","to","title","useState","trendingMovies","setTrendingMovies","loading","setLoading","error","setError","useEffect","fetchData"],"sourceRoot":""}