{"version":3,"file":"static/js/43.2745aff4.chunk.js","mappings":"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","sources":["fetch-services/Fetch-servises.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'eb6a45a4ae6328e079a1ce9a0d7e00e8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\n\nexport const getTrendingMovies = async () => {\n  const responce = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return responce.data;\n};\n\n\n\nexport const getMoviesBySearch = async (query, page) => {\n  const responce = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}'&page=${page}&include_adult=false`\n  );\n  return responce.data;\n};\n\n\nexport const getMovieDetails = async id => {\n  const responce = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\n\nexport const getMovieCast = async id => {\n  const responce = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data.cast;\n};\n\n\n\nexport const getReviews = async id => {\n  const responce = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data.results;\n};\n","import styled from 'styled-components';\n\nexport const BackBtn = styled.button`\n  display: inline-flex;\n  margin-left: 50px;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: white;\n  text-shadow: 3px 4px 7px rgba(7, 34, 38, 0.8);\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  :hover {\n    color: lightskyblue;\n  }\n`;\n\nexport const MovieBox = styled.section`\n  padding-right: 50px;\n  padding-left: 50px;\n  /* padding-top: 30px; */\n  padding-bottom: 10px;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-bottom: 30px;\n`;\n\nexport const CardImg = styled.img`\n  width: 280px;\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\n  object-fit: cover;\n`;\n\nexport const CardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 600px;\n`;\nexport const InfoTitle = styled.h2`\n  color: white;\n  text-shadow: 3px 4px 7px rgba(7, 34, 38, 0.8);\n  font-weight: 700;\n  font-size: 35px;\n`;\n\nexport const InfoTitle2 = styled.h3`\n  color: white;\n  text-shadow: 3px 4px 7px rgba(7, 34, 38, 0.8);\n  font-weight: 500;\n  font-size: 25px;\n`;\nexport const Info = styled.p`\n\n  color: #022633;\n  font-weight: 500;\n  font-size: 20px;\n`;\nexport const GenreList = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const GenreItem = styled.li`\n  color: #033040;\n  font-weight: 500;\n  font-size: 20px;\n`;\n\nexport const InfoSection = styled.h4`\n  display: flex;\n    gap: 30px;\n    align-items: baseline;\n`;\n\nexport const AddInfo = styled.h4`\n  color: white;\n  text-shadow: 3px 4px 7px rgba(7, 34, 38, 0.8);\n  font-weight: 500;\n  font-size: 30px;\n`;\n\nexport const InfoLinks = styled.ul`\n    display: flex;\n    gap: 30px;\n    \n`\nexport const LinkItem = styled.li`\n    color: white;\n  text-shadow: 3px 4px 7px rgba(7, 34, 38, 0.8);\n  font-weight: 500;\n  font-size: 30px;\n     text-decoration: underline;\n\n  :focus,\n  &:hover {  \n   \n     text-shadow: 3px 4px 7px rgba(7, 34, 38, 0.8);\n  }\n    \n`\n","import { Suspense } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport {\n  MovieBox,\n  Card,\n  CardInfo,\n  CardImg,\n  InfoTitle,\n  InfoTitle2,\n  Info,\n  GenreList,\n  GenreItem,\n  AddInfo,\n  InfoLinks,\n  LinkItem,\n  InfoSection\n} from './MovieCard.styled';\n\nconst MovieCard = ({\n  movie: { poster_path, title, vote_average, overview, genres, id },\n}) => {\n  return (\n    <MovieBox>\n      <Card>\n        <div>\n          <CardImg\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/original${poster_path}`\n                : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\n            }\n            alt={title}\n          />\n        </div>\n\n        <CardInfo>\n          <InfoTitle>{title}</InfoTitle>\n          <Info>User Score: {Math.round(vote_average * 10)}%</Info>\n          <InfoTitle2>Overview</InfoTitle2>\n          <Info>{overview}</Info>\n          <InfoTitle2>Genres</InfoTitle2>\n          <GenreList>\n            {genres?.map(({ id, name }) => (\n              <GenreItem key={id}>{name}</GenreItem>\n            ))}\n          </GenreList>\n        </CardInfo>\n      </Card>\n\n      <InfoSection>\n        <AddInfo>Additional Information:</AddInfo>\n\n        <InfoLinks>\n          <LinkItem>\n            <Link to={`cast`}>\n              <p>Cast</p>\n            </Link>\n          </LinkItem>\n\n          <LinkItem>\n            <Link to={`reviews`}>\n              <p>Reviews</p>\n            </Link>\n          </LinkItem>\n        </InfoLinks>\n      </InfoSection>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </MovieBox>\n  );\n};\n\nexport default MovieCard;\n","import  MovieCard from 'components/MovieCard/MovieCard';\nimport { getMovieDetails } from 'fetch-services/Fetch-servises';\nimport { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport { BackBtn } from 'components/MovieCard/MovieCard.styled'\n\n\n const MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const responce = await getMovieDetails(movieId);\n        setMovieDetails(responce);\n      } catch {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [error, movieId]);\n\n  return (\n    <>\n      <Link to={backLinkLocation.current}>\n          <BackBtn  type='button'> Go Back</BackBtn >\n        </Link>\n      <section>\n       \n        {loading && <div>Loading...</div>}\n        <MovieCard movie={movieDetails} />\n      </section>\n    </>\n  );\n};\n\n\n export default MovieDetails"],"names":["API_KEY","axios","getTrendingMovies","responce","data","getMoviesBySearch","query","page","getMovieDetails","id","getMovieCast","cast","getReviews","results","BackBtn","styled","MovieBox","Card","CardImg","CardInfo","InfoTitle","InfoTitle2","Info","GenreList","GenreItem","InfoSection","AddInfo","InfoLinks","LinkItem","movie","poster_path","title","vote_average","overview","genres","src","alt","Math","round","map","name","to","Suspense","fallback","useState","movieDetails","setMovieDetails","loading","setLoading","error","setError","movieId","useParams","location","useLocation","backLinkLocation","useRef","state","from","useEffect","fetchData","current","type"],"sourceRoot":""}