{"version":3,"file":"static/js/387.203866db.chunk.js","mappings":"gRAEaA,EAAaC,EAAAA,GAAAA,GAAH,qEAKVC,EAAeD,EAAAA,GAAAA,GAAH,gKAQZE,EAAaF,EAAAA,GAAAA,EAAH,4IAOVG,EAAWH,EAAAA,GAAAA,EAAH,gF,SC6BrB,EA9CiB,WACf,OAAoCI,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBN,GAAW,GADK,mBAGSO,EAAAA,EAAAA,IAAWJ,GAHpB,OAGRK,EAHQ,OAIdC,QAAQC,IAAIF,GACZV,EAAcU,GALA,gDAOdN,EAASD,GAPK,yBASdD,GAAW,GATG,4EAAH,qDAYfM,GACD,GAAE,CAACL,EAAOE,KAGT,+BACE,+BACGJ,IAAW,wCACW,IAAtBF,EAAWc,QACV,wBACGd,EAAWe,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC7B,OACE,UAACxB,EAAD,YACE,UAACE,EAAD,sBAAuBqB,MACvB,SAACpB,EAAD,UAAaqB,MAFEF,EAKpB,OAGH,SAAClB,EAAD,2DAKT,C,+LC/CKqB,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAIlB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAA,qCAAwCD,IADhC,cACzBR,EADyB,yBAExBA,EAASW,MAFe,2CAAH,qDAOjBC,EAAiB,mCAAG,WAAOC,EAAOC,GAAd,uFACRL,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBK,EADpB,kBACmCC,EADnC,yBADQ,cACzBd,EADyB,yBAIxBA,EAASW,MAJe,2CAAH,wDAQjBI,EAAe,mCAAG,WAAMV,GAAN,uFACNI,EAAAA,EAAAA,IAAA,gBACZJ,EADY,oBACEG,EADF,oBADM,cACvBR,EADuB,yBAItBA,EAASW,MAJa,2CAAH,sDAQfK,EAAY,mCAAG,WAAMX,GAAN,uFACHI,EAAAA,EAAAA,IAAA,gBACZJ,EADY,4BACUG,EADV,oBADG,cACpBR,EADoB,yBAInBA,EAASW,KAAKM,MAJK,2CAAH,sDASZlB,EAAU,mCAAG,WAAMM,GAAN,uFACDI,EAAAA,EAAAA,IAAA,gBACZJ,EADY,4BACUG,EADV,oBADC,cAClBR,EADkB,yBAIjBA,EAASW,KAAKO,SAJG,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","fetch-services/Fetch-servises.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewList = styled.li`\nmargin-bottom:40px;\nwidth: 900px;   \n    \n`\nexport const ReviewAuthor = styled.h4`\ncolor: white;\n  text-shadow: 3px 4px 7px rgba(7, 34, 38, 0.8);\n  font-weight: 500;\n  font-size: 25px;\n  padding-bottom: 0;  \n    \n`\nexport const ReviewText = styled.p`\n color: lightskyblue;\n  font-weight: 500;\n  font-size: 20px;\n  text-shadow: 3px 4px 7px rgba(7, 34, 38, 0.8);  \n`\n\nexport const NoReview = styled.p`\ncolor: white;\n  font-weight: 500;\n  font-size: 20px;\n`","import { getReviews } from 'fetch-services/Fetch-servises';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewList, ReviewAuthor, ReviewText, NoReview } from './Reviews.styled';\n\n const Reviews = () => {\n  const [reviewList, setReviewList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const responce = await getReviews(movieId);\n        console.log(responce);\n        setReviewList(responce);\n      } catch {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [error, movieId]);\n\n  return (\n    <>\n      <section>\n        {loading && <div>Loading...</div>}\n        {reviewList.length !== 0 ? (\n          <ul>\n            {reviewList.map(({ id, author, content }) => {\n              return (\n                <ReviewList key={id}>\n                  <ReviewAuthor>Author: {author}</ReviewAuthor>\n                  <ReviewText>{content}</ReviewText>\n                </ReviewList>\n              );\n            })}\n          </ul>\n        ) : (\n          <NoReview>We don't have any reviews for this movie</NoReview>\n        )}\n      </section>\n    </>\n  );\n};\n\nexport default Reviews","import axios from 'axios';\n\nconst API_KEY = 'eb6a45a4ae6328e079a1ce9a0d7e00e8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\n\nexport const getTrendingMovies = async () => {\n  const responce = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return responce.data;\n};\n\n\n\nexport const getMoviesBySearch = async (query, page) => {\n  const responce = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}'&page=${page}&include_adult=false`\n  );\n  return responce.data;\n};\n\n\nexport const getMovieDetails = async id => {\n  const responce = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\n\nexport const getMovieCast = async id => {\n  const responce = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data.cast;\n};\n\n\n\nexport const getReviews = async id => {\n  const responce = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data.results;\n};\n"],"names":["ReviewList","styled","ReviewAuthor","ReviewText","NoReview","useState","reviewList","setReviewList","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchData","getReviews","responce","console","log","length","map","id","author","content","API_KEY","axios","getTrendingMovies","data","getMoviesBySearch","query","page","getMovieDetails","getMovieCast","cast","results"],"sourceRoot":""}