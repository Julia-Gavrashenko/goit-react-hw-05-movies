{"version":3,"file":"static/js/247.7ae0fdae.chunk.js","mappings":"yNA6DA,UAzDa,WACX,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBN,GAAW,GADK,mBAGSO,EAAAA,EAAAA,IAAaJ,GAHtB,OAGRK,EAHQ,OAIdC,QAAQC,IAAIF,GACZV,EAAaU,GALC,gDAOdN,EAASD,GAPK,yBASdD,GAAW,GATG,4EAAH,qDAYfM,GACD,GAAE,CAACL,EAAOE,KAGT,+BACE,+BACGJ,IAAW,wCACU,IAArBF,EAAUc,QACT,wBACGd,EAAUe,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACxC,OACE,2BACE,gBACEC,IACEF,EAAY,6CAC8BA,GACtC,6EAENG,IAAKJ,EACLK,MAAO,OAET,uBAAIL,KACJ,wCACa,0BAAOE,SAZbH,EAgBZ,OAGH,0FAKT,C,+LCzDKO,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAIlB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAA,qCAAwCD,IADhC,cACzBZ,EADyB,yBAExBA,EAASe,MAFe,2CAAH,qDAOjBC,EAAiB,mCAAG,WAAOC,EAAOC,GAAd,uFACRL,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBK,EADpB,kBACmCC,EADnC,yBADQ,cACzBlB,EADyB,yBAIxBA,EAASe,MAJe,2CAAH,wDAQjBI,EAAe,mCAAG,WAAMd,GAAN,uFACNQ,EAAAA,EAAAA,IAAA,gBACZR,EADY,oBACEO,EADF,oBADM,cACvBZ,EADuB,yBAItBA,EAASe,MAJa,2CAAH,sDAQfhB,EAAY,mCAAG,WAAMM,GAAN,uFACHQ,EAAAA,EAAAA,IAAA,gBACZR,EADY,4BACUO,EADV,oBADG,cACpBZ,EADoB,yBAInBA,EAASe,KAAKK,MAJK,2CAAH,sDASZC,EAAU,mCAAG,WAAMhB,GAAN,uFACDQ,EAAAA,EAAAA,IAAA,gBACZR,EADY,4BACUO,EADV,oBADC,cAClBZ,EADkB,yBAIjBA,EAASe,KAAKO,SAJG,2CAAH,qD","sources":["components/Cast/Cast.jsx","fetch-services/Fetch-servises.jsx"],"sourcesContent":["import { getMovieCast } from 'fetch-services/Fetch-servises';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const responce = await getMovieCast(movieId);\n        console.log(responce);\n        setMovieCast(responce);\n      } catch {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [error, movieId]);\n\n  return (\n    <>\n      <section>\n        {loading && <div>Loading...</div>}\n        {movieCast.length !== 0 ? (\n          <ul>\n            {movieCast.map(({ id, name, profile_path, character }) => {\n              return (\n                <li key={id}>\n                  <img\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/original${profile_path}`\n                        : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\n                    }\n                    alt={name}\n                    width={200}\n                  />\n                  <p>{name}</p>\n                  <p>\n                    Character: <span>{character}</span>\n                  </p>\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          <p>We don't have any information about the cast of this movie</p>\n        )}\n      </section>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'eb6a45a4ae6328e079a1ce9a0d7e00e8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\n\nexport const getTrendingMovies = async () => {\n  const responce = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return responce.data;\n};\n\n\n\nexport const getMoviesBySearch = async (query, page) => {\n  const responce = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}'&page=${page}&include_adult=false`\n  );\n  return responce.data;\n};\n\n\nexport const getMovieDetails = async id => {\n  const responce = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\n\nexport const getMovieCast = async id => {\n  const responce = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data.cast;\n};\n\n\n\nexport const getReviews = async id => {\n  const responce = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data.results;\n};\n"],"names":["useState","movieCast","setMovieCast","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchData","getMovieCast","responce","console","log","length","map","id","name","profile_path","character","src","alt","width","API_KEY","axios","getTrendingMovies","data","getMoviesBySearch","query","page","getMovieDetails","cast","getReviews","results"],"sourceRoot":""}