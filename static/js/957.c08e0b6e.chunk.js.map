{"version":3,"file":"static/js/957.c08e0b6e.chunk.js","mappings":"+SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAIlB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAA,qCAAwCD,IADhC,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAOjBC,EAAiB,mCAAG,WAAOC,EAAOC,GAAd,uFACRN,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBM,EADpB,kBACmCC,EADnC,yBADQ,cACzBJ,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,wDAQjBI,EAAe,mCAAG,WAAMC,GAAN,uFACNR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACET,EADF,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAQfM,EAAY,mCAAG,WAAMD,GAAN,uFACHR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACUT,EADV,oBADG,cACpBG,EADoB,yBAInBA,EAASC,KAAKO,MAJK,2CAAH,sDASZC,EAAU,mCAAG,WAAMH,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACUT,EADV,oBADC,cAClBG,EADkB,yBAIjBA,EAASC,KAAKS,SAJG,2CAAH,qD,8ICkBvB,EAtDmB,SAAC,GAEb,IAAD,IADJC,MAASC,EACL,EADKA,YAAaC,EAClB,EADkBA,MAAOC,EACzB,EADyBA,aAAcC,EACvC,EADuCA,SAAUC,EACjD,EADiDA,OACjD,EADyDV,GAE7D,OACE,gCACE,0BACE,gBACEW,IACEL,EAAW,6CAC+BA,GACtC,6EAENM,IAAKL,EACLM,MAAO,SAGX,4BACE,wBAAKN,KACL,wCAAgBO,KAAKC,MAAqB,GAAfP,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,+BACGC,QADH,IACGA,OADH,EACGA,EAAQM,KAAI,gBAAGhB,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,KAAP,OACX,wBAAcA,GAALjB,EADE,UAKjB,4BACE,oDAEA,2BACE,yBACE,SAAC,KAAD,CAAMkB,GAAE,OAAR,UACE,qCAIJ,yBACE,SAAC,KAAD,CAAMA,GAAE,UAAR,UACE,8CAMR,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,E,SCVA,EAvCqB,WAAO,IAAD,IAC1B,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAiBxD,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBZ,GAAW,GADK,mBAGS1B,EAAAA,EAAAA,IAAgB6B,GAHzB,OAGRlC,EAHQ,OAId6B,EAAgB7B,GAJF,gDAMdiC,EAASD,GANK,yBAQdD,GAAW,GARG,4EAAH,qDAWfY,GACD,GAAE,CAACX,EAAOE,KAGT,iCACG,SAAC,KAAD,CAAMV,GAAIc,EAAiBM,QAA3B,UACG,mBAAQC,KAAK,SAAb,wBAEJ,+BAEGf,IAAW,yCACZ,SAAC,EAAD,CAAWnB,MAAOiB,SAIzB,C","sources":["fetch-services/Fetch-servises.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'eb6a45a4ae6328e079a1ce9a0d7e00e8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\n\nexport const getTrendingMovies = async () => {\n  const responce = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return responce.data;\n};\n\n\n\nexport const getMoviesBySearch = async (query, page) => {\n  const responce = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}'&page=${page}&include_adult=false`\n  );\n  return responce.data;\n};\n\n\nexport const getMovieDetails = async id => {\n  const responce = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\n\nexport const getMovieCast = async id => {\n  const responce = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data.cast;\n};\n\n\n\nexport const getReviews = async id => {\n  const responce = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data.results;\n};\n","import { Suspense } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\n\n const MovieCard = ({\n  movie: { poster_path, title, vote_average, overview, genres, id },\n}) => {\n  return (\n    <section>\n      <div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/original${poster_path}`\n              : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\n          }\n          alt={title}\n          width={250}\n        />\n      </div>\n      <div>\n        <h2>{title}</h2>\n        <p>User Score: {Math.round(vote_average * 10)}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <ul>\n          {genres?.map(({ id, name }) => (\n            <li key={id}>{name}</li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <h4>Additional Information</h4>\n\n        <ul>\n          <li>\n            <Link to={`cast`}>\n              <p>Cast</p>\n            </Link>\n          </li>\n\n          <li>\n            <Link to={`reviews`}>\n              <p>Reviews</p>\n            </Link>\n          </li>\n        </ul>\n      </div>\n      \n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </section>\n  );\n};\n\n\nexport default MovieCard","import  MovieCard from 'components/MovieCard/MovieCard';\nimport { getMovieDetails } from 'fetch-services/Fetch-servises';\nimport { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\n\n const MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const responce = await getMovieDetails(movieId);\n        setMovieDetails(responce);\n      } catch {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [error, movieId]);\n\n  return (\n    <>\n       <Link to={backLinkLocation.current}>\n          <button type='button'>Go Back</button>\n        </Link>\n      <section>\n       \n        {loading && <div>Loading...</div>}\n        <MovieCard movie={movieDetails} />\n      </section>\n    </>\n  );\n};\n\n\n export default MovieDetails"],"names":["API_KEY","axios","getTrendingMovies","responce","data","getMoviesBySearch","query","page","getMovieDetails","id","getMovieCast","cast","getReviews","results","movie","poster_path","title","vote_average","overview","genres","src","alt","width","Math","round","map","name","to","Suspense","fallback","useState","movieDetails","setMovieDetails","loading","setLoading","error","setError","movieId","useParams","location","useLocation","backLinkLocation","useRef","state","from","useEffect","fetchData","current","type"],"sourceRoot":""}